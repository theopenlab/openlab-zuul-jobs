# Populate local conf header
- name: create devstack local conf header
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      NETWORK_GATEWAY=10.0.0.1
      enable_plugin neutron git://git.openstack.org/openstack/neutron
      EOF
    executable: /bin/bash

- name: Disable httpd_mod_wsgi services
  shell:
    cmd: |
      cat << EOF >> /tmp/dg-local.conf
      ENABLE_HTTPD_MOD_WSGI_SERVICES="False"
      KEYSTONE_USE_MOD_WSGI="False"
      NOVA_USE_MOD_WSGI="False"
      SWIFT_USE_MOD_WSGI="False"
      HEAT_USE_MOD_WSGI="False"
      CINDER_USE_MOD_WSGI="False"
      WSGI_MODE="mod_wsgi"
      EOF
    executable: /bin/bash
  when:
    - DISABLE_HTTPD_MOD_WSGI|default(false)|bool == true

# Populate local conf with heat service enabled
- name: create devstack local conf with Heat enabled
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      enable_service heat,h-api,h-api-cfn,h-api-cw,h-eng
      enable_plugin heat git://git.openstack.org/openstack/heat
      EOF
    executable: /bin/bash
  when:
    - '"heat" in enable_services'

# Use neutron-* services to replace q-* services except Mitaka, Newton, Ocata and Pike
- name: enable neutron services by new services names
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      disable_service q-agt q-svc q-dhcp q-l3 q-meta q-metering
      enable_service neutron-agent neutron-api neutron-dhcp neutron-l3 neutron-metadata-agent neutron-metering
      EOF
    executable: /bin/bash
  when:
    - global_env.OS_BRANCH != 'stable/mitaka'
    - global_env.OS_BRANCH != 'stable/newton'
    - global_env.OS_BRANCH != 'stable/ocata'
    - global_env.OS_BRANCH != 'stable/pike'
    - '"fwaas-v1" not in enable_services'
    - '"fwaas-v2" not in enable_services'

- name: enable neutron non-default extension by name neutron-ext
  shell:
    cmd: |
      set -e
      set -x
      # From Queens
      insert_service='enable_service neutron-trunk neutron-qos'
      if [[ "{{ global_env.OS_BRANCH }}" == "stable/mitaka" || \
            "{{ global_env.OS_BRANCH }}" == "stable/newton" || \
            "{{ global_env.OS_BRANCH }}" == "stable/ocata" || \
            "{{ global_env.OS_BRANCH }}" == "stable/pike" ]]; then
          insert_service='enable_service q-trunk q-qos'
      fi
      echo ${insert_service} >> /tmp/dg-local.conf
    executable: /bin/bash
  when:
  - '"neutron-ext" in enable_services'

# Populate local conf with specific branch
- name: create devstack local conf on stable/mitaka branch
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      # Default value is 2.0 in Mitaka, and 2.0 API will be deprecated
      # in the future, test against V3 API in stead.
      IDENTITY_API_VERSION=3
      OS_USER_DOMAIN_ID=default
      OS_PROJECT_DOMAIN_ID=default
      EOF
    executable: /bin/bash
  when:
    global_env.OS_BRANCH == 'stable/mitaka' or
    global_env.OS_BRANCH == 'stable/newton'


# Populate local conf with specific service
- name: create devstack local conf with manila enabled
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      MANILA_BACKEND1_CONFIG_GROUP_NAME=london
      MANILA_BACKEND2_CONFIG_GROUP_NAME=paris
      MANILA_SHARE_BACKEND1_NAME=LONDON
      MANILA_SHARE_BACKEND2_NAME=PARIS
      MANILA_OPTGROUP_london_driver_handles_share_servers=True
      MANILA_OPTGROUP_paris_driver_handles_share_servers=True
      MANILA_USE_SERVICE_INSTANCE_PASSWORD=True
      MANILA_USE_DOWNGRADE_MIGRATIONS=True
      MANILA_MULTI_BACKEND=True
      MANILA_ADMIN_NET_RANGE=10.2.5.0/24
      MANILA_DATA_NODE_IP=10.2.5.0/24
      MANILA_DATA_COPY_CHECK_HASH=True
      MANILA_SHARE_MIGRATION_PERIOD_TASK_INTERVAL=1
      SHARE_DRIVER=manila.share.drivers.generic.GenericShareDriver
      MANILA_SERVICE_IMAGE_ENABLED=True
      MANILA_DEFAULT_SHARE_TYPE_EXTRA_SPECS='snapshot_support=True create_share_from_snapshot_support=True'

      enable_plugin heat git://git.openstack.org/openstack/heat
      enable_plugin manila git://git.openstack.org/openstack/manila
      EOF
    executable: /bin/bash
  when:
    - '"manila" in enable_services'

- name: create devstack local conf with designate enabled
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      enable_service designate,designate-central,designate-api,designate-pool-manager,designate-zone-manager,designate-mdns
      enable_plugin designate git://git.openstack.org/openstack/designate
      EOF
    executable: /bin/bash
  when:
    - '"designate" in enable_services'

- name: create devstack local conf with lbaas enabled
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      enable_service neutron-lbaasv2,octavia,o-cw,o-hm,o-hk,o-api
      enable_plugin neutron-lbaas https://git.openstack.org/openstack/neutron-lbaas
      enable_plugin octavia https://git.openstack.org/openstack/octavia
      enable_plugin barbican https://git.openstack.org/openstack/barbican
      # Avoid to confict with vm fixed ip in some public cloud
      OCTAVIA_MGMT_SUBNET=192.168.10.0/24
      OCTAVIA_MGMT_SUBNET_START=192.168.10.2
      OCTAVIA_MGMT_SUBNET_END=192.168.10.200
      EOF
    executable: /bin/bash
  when:
    - '"lbaas" in enable_services'

- name: create devstack local conf with octavia enabled
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      enable_service octavia,o-cw,o-hm,o-hk,o-api
      enable_plugin octavia https://git.openstack.org/openstack/octavia
      enable_plugin barbican https://git.openstack.org/openstack/barbican
      # Avoid to confict with vm fixed ip in some public cloud
      OCTAVIA_MGMT_SUBNET=192.168.10.0/24
      OCTAVIA_MGMT_SUBNET_START=192.168.10.2
      OCTAVIA_MGMT_SUBNET_END=192.168.10.200
      EOF
    executable: /bin/bash
  when:
    - '"octavia" in enable_services'

- name: create devstack local conf with fwaas v1 enabled
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      enable_service q-fwaas-v1
      enable_plugin neutron-fwaas https://git.openstack.org/openstack/neutron-fwaas
      EOF
    executable: /bin/bash
  when:
    - '"fwaas-v1" in enable_services'

- name: create devstack local conf with fwaas v2 enabled
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      enable_service q-fwaas-v2
      enable_plugin neutron-fwaas https://git.openstack.org/openstack/neutron-fwaas
      EOF
    executable: /bin/bash
  when:
    - '"fwaas-v2" in enable_services'

- name: create devstack local conf with zun enabled
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      enable_service zun-api,zun-compute,zun-wsproxy
      enable_plugin devstack-plugin-container https://git.openstack.org/openstack/devstack-plugin-container
      KURYR_CAPABILITY_SCOPE=global
      KURYR_ETCD_PORT=2379
      enable_plugin kuryr-libnetwork https://git.openstack.org/openstack/kuryr-libnetwork
      enable_plugin zun https://git.openstack.org/openstack/zun
      EOF
    executable: /bin/bash
  when:
    - '"zun" in enable_services'
    - global_env.OS_BRANCH != 'stable/mitaka'
    - global_env.OS_BRANCH != 'stable/newton'
    - global_env.OS_BRANCH != 'stable/ocata'

- name: create devstack local conf with ceph enabled
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      enable_plugin devstack-plugin-ceph https://git.openstack.org/openstack/devstack-plugin-ceph refs/changes/70/561370/3
      ENABLE_CEPH_CINDER=True
      ENABLE_CEPH_GLANCE=False
      ENABLE_CEPH_C_BAK=False
      ENABLE_CEPH_NOVA=False
      ENABLE_CEPH_MANILA=True
      MANILA_CEPH_DRIVER=cephfsnative
      EOF
    executable: /bin/bash
  when:
    - '"ceph" in enable_services'
