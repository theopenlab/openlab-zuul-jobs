- name: Workaround for devstack installation in Newton or earlier
  shell:
    cmd: |
      # workaround for bug https://review.openstack.org/#/c/562610/
      sed -i '/"Running gate_hook"/ a\
          sed -i "s/strip/split/" /opt/stack/new/devstack/inc/python' '{{ ansible_user_dir }}/workspace/devstack-gate/devstack-vm-gate-wrap.sh'
    executable: /bin/bash
  ignore_errors: yes

- name: Enable legacy identity service endpoint format
  shell:
    cmd: |
      # workaround for bug https://review.openstack.org/#/c/606789
      sed -i '/"Running gate_hook"/ a\
          sed -i "/KEYSTONE_SERVICE_URI=/ s|/identity|:5000|" /opt/stack/new/devstack/lib/keystone' '{{ ansible_user_dir }}/workspace/devstack-gate/devstack-vm-gate-wrap.sh'
    executable: /bin/bash
  when:
    - DISABLE_HTTPD_MOD_WSGI|default(false)|bool

- name: Install libpcre3-dev
  shell: |
    apt install libpcre3-dev -y
  ignore_errors: yes

- name: workaround devstack installation on stable/mitaka branch
  shell:
    cmd: |
      set -e
      set -x
      # As openstack/requirements already upgrade requests to 2.22.0,
      # but didn't provider a 2.22.0 version for python34 which we used.
      # Install python3.5
      add-apt-repository ppa:deadsnakes/ppa -y
      apt-get update
      apt-get install python3.5 python3.5-dev libssl-dev -y
      update-alternatives --install $(which python3) python3 $(which python3.5) 1

      # Because the pip10 cannot uninstall/upgrade the pre-installed distutils packages
      # see: https://github.com/pypa/pip/issues/4805
      sed -i '/"Running gate_hook"/ a\
                sed -i "s/pip!=8/pip!=8,<10.0.0/" /opt/stack/new/devstack/tools/cap-pip.txt' '{{ ansible_user_dir }}/workspace/devstack-gate/devstack-vm-gate-wrap.sh'
      # Because in setuptools>=39, the pkg_resources.parse_version(oslo_utils/versionutils.py) will return an unindexable object
      pip install "setuptools==38.0.0"
      # Fix issue https://github.com/theopenlab/openlab/issues/79
      apt-get purge --yes python-six python-six-whl python3-six
      pip install "reno==2.9.2"
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - global_env.OS_BRANCH == 'stable/mitaka'

- name: Install devstack on {{ global_env.OS_BRANCH }} branch
  shell:
    cmd: |
      set -e
      set -x
      export PYTHONUNBUFFERED=true
      export GIT_BASE=https://github.com
      export OVERRIDE_ZUUL_BRANCH='{{ global_env.OS_BRANCH }}'
      export DEVSTACK_GATE_NEUTRON=1
      export DEVSTACK_GATE_FIXED_RANGE=10.0.0.0/20
      export PROJECTS="openstack/designate $PROJECTS"
      export PROJECTS="openstack/python-manilaclient openstack/manila-tempest-plugin $PROJECTS"
      export PROJECTS="openstack/barbican openstack/python-barbicanclient $PROJECTS"
      export PROJECTS="openstack/devstack-plugin-container $PROJECTS"
      export PROJECTS="openstack/kuryr-libnetwork $PROJECTS"
      export PROJECTS="openstack/zun openstack/zun-tempest-plugin openstack/python-zunclient $PROJECTS"
      export PROJECTS="openstack/diskimage-builder $PROJECTS"
      export PROJECTS="openstack/python-octaviaclient $PROJECTS"
      export PROJECTS="openstack/trove openstack/python-troveclient openstack/trove-dashboard openstack/tripleo-image-elements $PROJECTS"

      cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
      ./safe-devstack-vm-gate-wrap.sh

      # Enable snat
      eval $(grep FLOATING_RANGE /opt/stack/new/devstack/local.conf)
      iptables -t nat -A POSTROUTING -s "$FLOATING_RANGE" -o $(ip -4 route | grep ^default | awk '{print $5}') -j MASQUERADE

      # Delete all rules in chain openstack-INPUT to allow unlimited access from nested vm
      iptables -F openstack-INPUT || true
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'

# Convert multiple key=value pairs to json format
#   's/^/"/' - add " at the beginning of each line
#   's/=/": "/' - change = to ": " in each line
#   's/$/",/' - add ", at the end of each line
#   '$ s/,$//' - delete comma at the end of the last line
- name: Register devstack openrc
  shell:
    cmd: |
      source '{{ openrc_file }}' admin admin > /dev/null
      openrc=$(env | grep OS_ | sed -e 's/^/"/' -e 's/=/": "/' -e 's/$/",/' | sed '$ s/,$//')
      echo "{$openrc}"
    executable: /bin/bash
  register: output

- name: Set fact for devstack openrc
  set_fact:
    openrc: '{{ output.stdout | from_json }}'
  no_log: yes

- name: Merge devstack openrc into global env
  set_fact:
    global_env: '{{ global_env | combine(openrc) }}'
  no_log: yes
