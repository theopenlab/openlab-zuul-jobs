- hosts: all
  become: yes
  tasks:
    - shell:
        cmd: |
          apt-get install python-pip -y
          pip install -U python-openstackclient
          # NOTE: the following commands may include sensitive information please do not print in job logs
          export OS_PASSWORD="`echo {{ telefonica_credentials.password }}`"
          export OS_AUTH_TYPE="`echo {{ telefonica_credentials.auth_type }}`"
          export OS_AUTH_URL="`echo {{ telefonica_credentials.auth_url }}`"
          export OS_IDENTITY_API_VERSION="`echo {{ telefonica_credentials.identity_api_version }}`"
          export OS_DOMAIN_NAME="`echo {{ telefonica_credentials.domain_name }}`"
          export OS_PROJECT_NAME="`echo {{ telefonica_credentials.project_name}}`"
          export OS_REGION_NAME="`echo {{ telefonica_credentials.region_name}}`"
          export OS_TENANT_NAME="`echo {{ telefonica_credentials.project_name }}`"
          export OS_USERNAME="`echo {{ telefonica_credentials.user_name }}`"

          export OS_SHARE_NETWORK_ID="foobar"
          export OS_FLAVOR_ID_RESIZE=2
          export OS_FLAVOR_ID=1
          export OS_POOL_NAME="admin_external_net"
          export OS_EXTGW_ID="$(openstack network show $OS_POOL_NAME -f value -c id)"
          export OS_IMAGE_NAME="cirros-0.3.5-x86_64-disk"
          export OS_IMAGE_ID="$(openstack image show $OS_IMAGE_NAME -f value -c id)"
          if [ -z "$OS_IMAGE_ID" ]; then
              curl -O http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img
              export OS_IMAGE_ID="$(openstack image create --file ./cirros-0.3.5-x86_64-disk.img --min-disk 1 --container-format bare --disk-format raw cirros-0.3.5-x86_64-disk -f value -c id)"
              rm cirros-0.3.5-x86_64-disk.img
          fi
          _NET_PREFIX="gophercloud-telefonica"
          export OS_NETWORK_NAME="$_NET_PREFIX-net"
          export OS_NETWORK_ID="$(openstack network show $OS_NETWORK_NAME -f value -c id)"
          if [ -z "$OS_NETWORK_ID" ]; then
              export OS_NETWORK_ID="$(openstack network create $OS_NETWORK_NAME -f value -c id)"
              openstack subnet create --network $OS_NETWORK_ID --subnet-range 10.0.10.0/24 $_NET_PREFIX-subnet
          fi

          # set -e
          ret=0
          set -o pipefail
          set -x
          TEST_RESULTS_TXT='{{ ansible_user_dir }}/workspace/test_results.txt'
          go get ./... || true
          {
          # Only enable these successful test cases
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/ -run TestReauth || exitcode=$?
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/blockstorage/extensions -run \
              'TestVolumeActionsAttachCreateDestroy|TestVolumeActionsReserveUnreserve|TestVolumeActionsExtendSize' || exitcode=$?
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/blockstorage/v2 || exitcode=$?
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/compute/v2 || exitcode=$?
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/identity/v2 || exitcode=$?
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/identity/v3 || exitcode=$?
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/imageservice/v2 || exitcode=$?
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/networking/v2 || exitcode=$?
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/networking/v2/extensions || exitcode=$?
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/networking/v2/extensions/layer3 || exitcode=$?
          exit $exitstatus
          } 2>&1 | tee $TEST_RESULTS_TXTT
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ golang_env }}'
