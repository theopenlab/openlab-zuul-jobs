- hosts: all
  become: yes
  roles:
    - config-golang
    - clone-devstack-gate-to-workspace
    - role: create-devstack-local-conf
      enable_services:
        - 'fwaas-v1'
    - install-devstack
  tasks:
    - name: Run fwaas acceptance tests with terraform-provider-openstack
      shell:
        cmd: |
          set -e
          set -o pipefail
          set -x

          # Prep the testing environment by creating the required testing resources and environment variables
          pushd /opt/stack/new/devstack
          source openrc admin admin
          openstack flavor create m1.acctest --id 99 --ram 512 --disk 5 --vcpu 1 --ephemeral 10
          openstack flavor create m1.resize --id 98 --ram 512 --disk 6 --vcpu 1 --ephemeral 10
          _NETWORK_ID=$(openstack network show private -c id -f value)
          _EXTGW_ID=$(openstack network show public -c id -f value)
          _IMAGE=$(openstack image list | grep -i cirros | head -n 1)
          _IMAGE_ID=$(echo $_IMAGE | awk -F\| '{print $2}' | tr -d ' ')
          _IMAGE_NAME=$(echo $_IMAGE | awk -F\| '{print $3}' | tr -d ' ')
          echo export OS_IMAGE_NAME="$_IMAGE_NAME" >> openrc
          echo export OS_IMAGE_ID="$_IMAGE_ID" >> openrc
          echo export OS_NETWORK_ID=$_NETWORK_ID >> openrc
          echo export OS_EXTGW_ID=$_EXTGW_ID >> openrc
          echo export OS_POOL_NAME="public" >> openrc
          echo export OS_FLAVOR_ID=99 >> openrc
          echo export OS_FLAVOR_ID_RESIZE=98 >> openrc
          source openrc demo demo
          popd

          # Run the FWaaS test 100 testcases at a time
          export OS_FW_ENVIRONMENT=1 # for FWaaS tests
          testcases=`go test ./openstack/ -v -list 'Acc'`
          testcases=`echo "$testcases" | sed '$d' | grep FW`
          echo "$testcases" | xargs -t -n100 sh -c 'TF_LOG=DEBUG TF_ACC=1 TF_SCHEMA_PANIC_ON_ERROR=1 go test ./openstack -v -timeout 120m -run $(echo "$@" | tr " " "|")' argv0 2>&1 | tee $TEST_RESULTS_TXT
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'
