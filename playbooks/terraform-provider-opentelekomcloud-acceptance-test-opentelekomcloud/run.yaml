- hosts: all
  become: yes
  tasks:
    - shell:
        cmd: |
          apt-get install python-pip -y
          pip install -U python-openstackclient
          # NOTE: the following commands may include sensitive information please do not print in job logs
          export OS_PASSWORD="`echo {{ opentelekomcloud_credentials.password }}`"
          export OS_AUTH_TYPE="`echo {{ opentelekomcloud_credentials.auth_type }}`"
          export OS_AUTH_URL="`echo {{ opentelekomcloud_credentials.auth_url }}`"
          export OS_IDENTITY_API_VERSION="`echo {{ opentelekomcloud_credentials.identity_api_version }}`"
          export OS_DOMAIN_NAME="`echo {{ opentelekomcloud_credentials.domain_name }}`"
          export OS_PROJECT_NAME="`echo {{ opentelekomcloud_credentials.project_name}}`"
          export OS_REGION_NAME="`echo {{ opentelekomcloud_credentials.region_name}}`"
          export OS_TENANT_NAME="`echo {{ opentelekomcloud_credentials.project_name }}`"
          export OS_USERNAME="`echo {{ opentelekomcloud_credentials.user_name }}`"
          export OS_ACCESS_KEY="`echo {{ opentelekomcloud_credentials.access_key }}`"
          export OS_SECRET_KEY="`echo {{ opentelekomcloud_credentials.secret_key }}`"

          set -o pipefail
          set -x
          export OS_SHARE_NETWORK_ID="foobar"
          export OS_FLAVOR_ID_RESIZE=2
          export OS_FLAVOR_ID=1
          export OS_POOL_NAME="admin_external_net"
          # export OS_EXTGW_ID="$(openstack network show $OS_POOL_NAME -f value -c id)"
          export OS_EXTGW_ID=`openstack network list -f value |grep admin_external_net | awk -F ' ' '{print $1}'`
          export OS_IMAGE_NAME="cirros-0.3.5-x86_64-disk"
          export OS_IMAGE_ID="$(openstack image show $OS_IMAGE_NAME -f value -c id)"
          if [ -z "$OS_IMAGE_ID" ]; then
              curl -O http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img
              export OS_IMAGE_ID="$(openstack image create --file ./cirros-0.3.5-x86_64-disk.img --min-disk 1 --container-format bare --disk-format raw cirros-0.3.5-x86_64-disk -f value -c id)"
              rm cirros-0.3.5-x86_64-disk.img
          fi
          _NET_PREFIX="terraform-provider-opentelekomcloud"
          export OS_NETWORK_NAME="$_NET_PREFIX-net"
          export OS_NETWORK_ID="$(openstack network show $OS_NETWORK_NAME -f value -c id)"
          if [ -z "$OS_NETWORK_ID" ]; then
              export OS_NETWORK_ID="$(openstack network create $OS_NETWORK_NAME -f value -c id)"
              openstack subnet create --network $OS_NETWORK_ID --subnet-range 10.0.20.0/24 $_NET_PREFIX-subnet
          fi

          export OS_SWIFT_ENVIRONMENT=1
          # Run except the DNS/FW/LB test 100 testcases at a time
          testcases=`go test github.com/gator1/terraform-provider-opentelekomcloud/opentelekomcloud/ -v -list 'Acc'`
          testcases=`echo "$testcases" | sed '$d' | grep -v -e FW -e LB`
          # echo "$testcases" | xargs -t -n100 sh -c 'TF_ACC=1 go test github.com/gator1/terraform-provider-opentelekomcloud/opentelekomcloud/ -v -timeout 120m -run $(echo "$@" | tr " " "|")' argv0 2>&1 | tee $TEST_RESULTS_TXT
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ golang_env }}'
