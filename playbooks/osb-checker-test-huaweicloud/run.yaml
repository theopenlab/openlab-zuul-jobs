- hosts: all
  become: yes
  roles:
    - config-golang
    - role: export-cloud-openrc
      vars:
        cloud_name: 'huaweicloud'
  tasks:
    # NOTE: These 4 services(DCS, DMS, OBS, RDS) are only available in cn-north-1 region
    # now. We can remove the task when these services are on-line in HongKong region.
    - name: Change global_env to use cn-north-1 region
      set_fact:
        global_env: "{{ global_env | combine(cn_region_vars) }}"
      vars:
        cn_region_vars:
          OS_AUTH_URL: 'https://iam.cn-north-1.myhwclouds.com'
          OS_REGION_NAME: 'cn-north-1'
          OS_TENANT_NAME: 'cn-north-1'

    - name: Set variables for broker testing configurations
      set_fact:
        os_auth_url: '{{ global_env.OS_AUTH_URL }}'
        os_username: '{{ global_env.OS_USERNAME }}'
        os_password: '{{ global_env.OS_PASSWORD }}'
        os_domain_name: '{{ global_env.OS_DOMAIN_NAME }}'
        os_tenant_name: '{{ global_env.OS_TENANT_NAME }}'
        os_region_name: '{{ global_env.OS_REGION_NAME }}'
        os_access_key: '{{ global_env.OS_ACCESS_KEY }}'
        os_secret_key: '{{ global_env.OS_SECRET_KEY }}'
        db_username: broker
        db_password: password
        broker_username: username
        broker_password: password
        availability_zone: 'cn-north-1a'
        vpc_id: '9f53516c-a5d1-4721-9c50-9f5eccceeda9'
        # NOTE: this subnet is should be queried from portal than openstack cli
        subnet_id: 'fbefc198-03a2-491d-9705-62a84196caf3'
        security_group_id: 'e18c06ca-fcac-46ed-a272-b014633678bf'
        name_uuid: '{{ zuul.build[:10] }}'

    - name: Customize huaweicloud-service-broker config for huaweicloud services
      become: yes
      template:
        dest: "{{ zuul.project.src_dir }}/config.json"
        src: "huaweicloud-service-broker-config.json.j2"

    - name: Config osb checker for checking huaweicloud services
      become: yes
      template:
        dest: "{{ ansible_user_dir }}/src/github.com/openservicebrokerapi/osb-checker/2.13/tests/test/configs/config_huaweicloud_{{ item }}.json"
        src: "osb-checker-config-huaweicloud-{{ item }}.json.j2"
      with_items:
        - obs
        - dcs
        - rds
        - dms

    - name: Running obs-checker for huaweicloud services
      shell:
        cmd: |
          set -ex
          # Install and config mysql that is depended by huaweicloud-service-broker
          apt-get install -y mariadb-server mariadb-client python-pymysql libmysqlclient-dev
          cat << EOF | mysql -sfu root
          CREATE USER 'broker'@'localhost' IDENTIFIED BY 'password';
          GRANT ALL PRIVILEGES ON broker.* TO 'broker'@'localhost' WITH GRANT OPTION;
          CREATE DATABASE IF NOT EXISTS broker;
          FLUSH PRIVILEGES;
          EOF

          # Install huaweicloud/huaweicloud-service-broker
          go get ./...
          go install

          # Install and launch nodejs
          curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
          apt-get install -y nodejs
          node -v

          # Launching huaweicloud service broker implementation.
          nohup huaweicloud-service-broker -config=$GOPATH/src/github.com/huaweicloud/huaweicloud-service-broker/config.json \
              -port=3000 2>&1 &
          sleep 20

          # openservicebrokerapi/osb-checker is required project. Run tests
          pushd $GOPATH/src/github.com/openservicebrokerapi/osb-checker/2.13/tests/
          npm install
          npm install --save-dev mocha-simple-html-reporter
          npm install --global mocha
          set +x
          checker_cfg=config_mock.json
          mkdir -p "{{ ansible_user_dir }}/workspace/test_results/"
          for service in obs dcs rds dms; do
              echo "#########################################################################"
              echo "Runing osb-checker against huaweicloud ${service} service...."
              sed -i "s/${checker_cfg}/config_huaweicloud_${service}.json/g" test/test.js
              mocha -t 200000 test/test.js --reporter mocha-simple-html-reporter --reporter-options output="{{ ansible_user_dir }}/workspace/test_results/${service}.html" || exitcode=$?
              checker_cfg=config_huaweicloud_${service}.json
          done
          popd
          set -x
          exit $exitcode
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'
