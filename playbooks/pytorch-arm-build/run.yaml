- hosts: all
  become: yes
  tasks:
    - name: prepare
      shell:
        cmd: |
          apt update
          apt install -y python3-pip cmake libffi-dev
          pip3 install -U pip
          pip --version
          pip install scikit-build
          pip install numpy ninja pyyaml setuptools cffi

      args:
        executable: /bin/bash
        chdir: '/opt'
      environment: '{{ global_env }}'

    - name: Checkout Release
      shell:
        cmd: |
          git checkout {{ global_env.RELEASE }} -b {{ global_env.RELEASE }}
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'
      when:
        global_env.RELEASE != 'master'

    - name: Update Repo
      shell:
        cmd: |
          git submodule sync
          git submodule update --init --recursive
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'

    - name: Build Pytorch
      shell:
        cmd: |
          pip install -r requirements.txt
          USE_CUDA=0 python3 setup.py bdist_wheel
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'

    - name: Copy the built file
      shell:
        cmd: |
          cp dist/torch-*.whl "{{ ansible_user_dir }}/workspace/test_results/"
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'

    - name: Get whl file name
      find:
        paths: "{{ ansible_user_dir }}/workspace/test_results/"
        patterns: 'torch-*.whl'
      register: file_name_matched

    - name: Set whl file name
      set_fact:
        whl_file_name: "{{ file_name_matched.files[0].path.split('/')[-1] }}"

    - name: Return artifact to Zuul
      zuul_return:
        data:
          zuul:
            artifacts:
              - name: "whl file download"
                url: "test_results/{{ whl_file_name }}"
