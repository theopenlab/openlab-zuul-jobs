- hosts: all
  become: yes
  roles:
    - config-golang
    - role: export-cloud-openrc
      vars:
        cloud_name: 'fusioncloud'
  tasks:
    - name: workaround for fusioncloud domain name mapping
      shell:
        cmd: |
          cat << EOF >> /etc/hosts
          58.255.93.185 iam-apigateway-proxy.fusioncloud.huawei.com
          58.255.93.185 iam-cache-proxy.fusioncloud.huawei.com
          58.255.93.185 ecs-api.fusioncloud.huawei.com
          58.255.93.185 evs-api.fusioncloud.huawei.com
          58.255.93.185 vpc-api.fusioncloud.huawei.com
          58.255.93.185 bms-api.fusioncloud.huawei.com
          58.255.93.185 ccs-api.fusioncloud.huawei.com
          58.255.93.185 as-api.fusioncloud.huawei.com
          58.255.93.185 ims-api.fusioncloud.huawei.com
          58.255.93.185 rts-api.fusioncloud.huawei.com
          58.255.93.171 obs-api.fusioncloud.huawei.com
          EOF
        executable: /bin/bash

    - name: Run acceptance tests with terraform-provider-huaweicloud against fusioncloud
      shell:
        cmd: |
          set -e
          set -o pipefail
          set -x
          apt-get install python-pip -y
          pip install -U python-openstackclient
          shopt -s expand_aliases
          alias openstack="openstack --insecure"

          export OS_FLAVOR_ID='0c324e05-f9d6-431c-8010-a33fcd4708e9' # 1U1G0G test01-jim
          export OS_FLAVOR_ID_RESIZE='67dfdda6-67da-42a6-8d48-c401959c06cc' # 2U2G0G test02-jim
          export OS_POOL_NAME="DemoCenter_extenalNet"
          export OS_EXTGW_ID=`openstack network show dummy_external_network -f value -c id`
          export OS_IMAGE_NAME="cirros-0.4.0-x86_64-disk"
          export OS_IMAGE_ID=$(openstack image show ${OS_IMAGE_NAME} -f value -c id)
          export OS_NETWORK_NAME="openlab-jobs-net"
          export OS_NETWORK_ID="$(openstack network show ${OS_NETWORK_NAME} -f value -c id)"
          # Enable ULB(Neutron LB) tests, see terraform-providers/terraform-provider-huaweicloud#52
          export OS_SUBNET_ID="$(openstack network show ${OS_NETWORK_NAME} -f value -c subnets)"
          export OS_VPC_ID="$(openstack router show openlab-jobs-vpc -f value -c id)"
          export OS_INSECURE=true
          # can only set one of OS_DOMAIN_ID and OS_DOMAIN_NAME
          unset OS_DOMAIN_ID

          # workaround, disable AK/SK auth to use token auth instead
          unset OS_ACCESS_KEY
          unset OS_SECRET_KEY

          # Run test 100 testcases at a time
          exitcode=0
          alltestcases=`go test ./huaweicloud/ -v -list 'Acc'`

          # Run acctests of IAM, Images, Compute, Networking, Rts/RTS, Vpc, S3, FW, LB, AS and BlockStorage services which are
          # supported in fusioncloud. Additionally, we run Images tests in a separate process to avoid messy output.  And we skip
          # several tests of Vpcpeering to avoid panic error that will break the following tests.
          testcases=`echo "$alltestcases" | sed '$d' | grep -e IAM -e Compute -e Networking -e Rts -e RTS -e Vpc -e S3 -e FW -e LB -e AS -e BlockStorage | grep -v -e ELB -e TestAccVpcPeeringConnectionV2DataSource_basic -e TestAccVpcRouteIdsV2DataSource_basic -e TestAccVpcRouteV2DataSource_basic`
          # Add OS_DEBUG=1 TF_LOG=debug flags for debuging
          echo "$testcases" | xargs -t -n100 sh -c 'OS_DEBUG=1 TF_LOG=debug TF_ACC=1 go test ./huaweicloud/ -v -timeout 300m -run $(echo "$@" | tr " " "|")' argv0 2>&1 | tee -a $TEST_RESULTS_TXT || exitcode=$?

          imagetestcases=`echo "$alltestcases" | sed '$d' | grep Images`
          echo "$imagetestcases" | xargs -t -n100 sh -c 'TF_LOG=debug TF_ACC=1 go test ./huaweicloud/ -v -timeout 300m -run $(echo "$@" | tr " " "|")' argv0 2>&1 | tee -a $TEST_RESULTS_TXT || exitcode=$?

          exit $exitcode
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'
