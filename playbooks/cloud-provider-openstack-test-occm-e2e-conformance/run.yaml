- hosts: all
  become: yes

  vars:
    swr_registry: swr.ap-southeast-3.myhuaweicloud.com
    swr_account: openlab

  roles:
    - role: config-golang
      vars:
        go_version: '1.15.11'
    - install-docker
    - install-devstack-cpo

  tasks:
    - name: Install packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - jq
          - httpie

    - name: Login SWR
      shell:
        executable: /bin/bash
        cmd: |
          docker login -u ap-southeast-3@{{ swr.ak }} -p {{ swr.sk }} {{ swr_registry }}
          docker pull {{ swr_registry }}/{{ swr_account }}/alpine:3.11
          docker tag {{ swr_registry }}/{{ swr_account }}/alpine:3.11 alpine:3.11
      no_log: yes

    - name: Build and upload openstack-cloud-controller-manager image
      environment: '{{ global_env }}'
      shell:
        executable: /bin/bash
        chdir: '{{ cpo_src_dir }}'
        cmd: |
          REGISTRY={{ swr_registry }}/{{ swr_account }} \
          VERSION={{ zuul.change }} \
          IMAGE_NAMES=openstack-cloud-controller-manager \
          make upload-image-amd64

    - name: Install k3s cluster
      import_role:
        name: install-k3s-vm
      vars:
        devstack_workdir: "{{ global_env.devstack_workdir }}"
        cpo_branch: "{{ zuul.branch }}"
        enable_cluster: true

    - name: Deploy openstack-cloud-controller-manager
      import_role:
        name: install-cpo-occm
      environment:
        KUBECONFIG: "{{ ansible_user_dir }}/.kube/config"
      vars:
        devstack_workdir: "{{ global_env.devstack_workdir }}"
        swr_ak: "{{ swr.ak }}"
        swr_sk: "{{ swr.sk }}"
        occm_image_tag: "{{ zuul.change }}"

    - name: Run conformance test
      environment: '{{ global_env }}'
      shell:
        executable: /bin/bash
        cmd: |
          set -ex

          git clone https://github.com/kubernetes/test-infra --depth 1
          cd test-infra
          go install ./kubetest

          export KUBECONFIG={{ ansible_user_dir }}/.kube/config
          K8S_VERSION=$(kubectl version -o json | jq -r '.serverVersion.gitVersion')
          K8S_VERSION=${K8S_VERSION%%+*}
          export KUBERNETES_CONFORMANCE_TEST=y

          mkdir -p '{{ k8s_log_dir }}'
          export LOG_DIR='{{ k8s_log_dir }}'
          sudo chmod 777 $LOG_DIR
          export KUBE_MASTER_IP={{ k3s_fip }}
          export KUBE_MASTER=k3s-master
          export MASTER_NAME=k3s-master
          export DUMP_ONLY_MASTER_LOGS=true

          kubetest --test \
            --provider=skeleton \
            --check-version-skew=false \
            --ginkgo-parallel=1 \
            --test_args="--ginkgo.focus=\\[Conformance\\] --ginkgo.noColor=true --ginkgo.v=true --ginkgo.trace=true --disable-log-dump=true" \
            --extract ${K8S_VERSION} \
            --timeout=150m | tee $LOG_DIR/e2e.log

    - name: Update latest image tag for openstack-cloud-controller-manager
      environment: '{{ global_env }}'
      shell:
        executable: /bin/bash
        chdir: '{{ cpo_src_dir }}'
        cmd: |
          if [ '{{ zuul.pipeline }}' == 'periodic-14' ] && [ '{{ zuul.branch }}' == 'master' ]; then
            docker tag {{ swr_registry }}/{{ swr_account }}/openstack-cloud-controller-manager-amd64:{{ zuul.change }} {{ swr_registry }}/{{ swr_account }}/openstack-cloud-controller-manager:latest
            docker push {{ swr_registry }}/{{ swr_account }}/openstack-cloud-controller-manager:latest
          fi
