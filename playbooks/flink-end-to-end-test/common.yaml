- hosts: all
  become: yes
  roles:
    - role: install-openjdk
      java_version: '8'
      with_scala: true
      scala_version: '2.11.0'
    - role: install-maven
      maven_version: '3.2.5'
  tasks:
    - name: Install Pre requirements
      shell:
        cmd: |
          add-apt-repository -y ppa:deadsnakes/ppa
          apt update
          apt install -y python3.7 python3.7-dev
          rm /usr/bin/python3
          ln -s /usr/bin/python3.7 /usr/bin/python3
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python3 get-pip.py
          apt install -y openssl libssl-dev libffi-dev python-dev python3-dev libevent-dev

    - name: Install docker compose
      shell:
        cmd: |
          pip install -U pip=22.2.1
          pip install -U setuptools==49.0.0
          pip install docker-compose

    - name: clean up iptable rules
      shell: iptables -F

    - name: Refresh resolv.conf
      shell: dhclient

- hosts: all
  become: no
  tasks:
    # Todo(wxy): Frocksdb doesn't have ARM release. Install it locally currently.
    - name: Install frocksdb with zuul
      shell:
        cmd: |
          wget https://github.com/wangxiyuan/Toy/raw/master/package/rocksdbjni-5.17.2-linux64.jar

          mvn install:install-file -DgroupId=com.data-artisans \
          -DartifactId=frocksdbjni -Dversion=5.17.2-artisans-2.0 \
          -Dpackaging=jar -Dfile=./rocksdbjni-5.17.2-linux64.jar
      args:
        executable: /bin/bash
        chdir: '/home/zuul'
      environment: '{{ global_env }}'

- hosts: all
  become: yes
  tasks:
    # Todo(wxy): Frocksdb doesn't have ARM release. Install it locally currently.
    - name: Install frocksdb with root
      shell:
        cmd: |
          wget https://github.com/wangxiyuan/Toy/raw/master/package/rocksdbjni-5.17.2-linux64.jar

          mvn install:install-file -DgroupId=com.data-artisans \
          -DartifactId=frocksdbjni -Dversion=5.17.2-artisans-2.0 \
          -Dpackaging=jar -Dfile=./rocksdbjni-5.17.2-linux64.jar
      args:
        executable: /bin/bash
        chdir: '/opt/'
      environment: '{{ global_env }}'
