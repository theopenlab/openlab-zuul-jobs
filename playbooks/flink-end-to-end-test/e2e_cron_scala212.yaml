- hosts: all
  become: yes
  tasks:
    - name: clean up iptable rules
      shell: iptables -F

    - name: Use huaweicloud repo
      shell: wget -O /etc/apt/sources.list https://repo.huaweicloud.com/repository/conf/Ubuntu-Ports-xenial.list && apt update

    - name: Install Pre requirements
      shell: apt install -y openssl libssl-dev libffi-dev python-dev python3-dev libevent-dev

    - name: Update resolv.conf
      shell: sed -i 's/nameserver 127.0.0.1/nameserver 8.8.8.8/' /etc/resolv.conf

- hosts: all
  become: yes
  roles:
    - role: install-openjdk
      java_version: '8'
      with_scala: true
      scala_version: '2.12.0'
    - role: install-maven
      maven_version: '3.2.5'
  tasks:
    - name: Install docker
      shell: apt install -y docker.io containerd

    - name: Install docker compose
      shell: pip3 install docker-compose

- hosts: all
  become: no
  tasks:
    # Todo(wxy): Frocksdb doesn't have ARM release. Build and install it locally currently.
    - name: Build and install frocksdb
      shell:
        cmd: |
          git clone https://github.com/dataArtisans/frocksdb.git
          cd frocksdb
          sudo apt install -y gcc g++ make
          export DEBUG_LEVEL=0
          make -j8 rocksdbjavastatic

          mvn install:install-file -DgroupId=com.data-artisans \
          -DartifactId=frocksdbjni -Dversion=5.17.2-artisans-2.0 \
          -Dpackaging=jar -Dfile=java/target/rocksdbjni-5.17.2-linux64.jar
      args:
        executable: /bin/bash
        chdir: '/home/zuul'
      environment: '{{ global_env }}'

    - name: Build Flink
      shell:
        cmd: |
          mvn clean install -DskipTests
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'

    - name: Hack - Use arm64 docker image
      shell:
         cmd: |
           # https://github.com/apache/flink-docker/pull/23
           sed -i 's/\/apache/\/wangxiyuan/' flink-end-to-end-tests/test-scripts/common_docker.sh
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'

    - name: Run e2e test - scala212
      shell:
        cmd: |
          set -xo pipefail

          PROFILE="-Dinclude-hadoop -Dhadoop.version=2.8.3 -Dinclude_hadoop_aws -Dscala-2.12 -Phive-1.2.1 -Pe2e-hadoop" FLINK_DIR=`pwd`/build-target flink-end-to-end-tests/run-nightly-tests.sh
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'
